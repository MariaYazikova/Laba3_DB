--задание 10
--найти фамилии медперсонала из Навашино, проводивших
--инъекции в Выксе
select Медперсонал.фамилия
from Трудовая_деятельность
join Медперсонал on Трудовая_деятельность.медперсонал_id = Медперсонал.идентификатор
where Медперсонал.адрес = 'Навашино' and 
Трудовая_деятельность.операции_id in(
select Типы_операций.идентификатор
from Типы_операций
where Типы_операций.опорный_пункт = 'Выкса' and
Типы_операций.наименование like '%Инъекция%'
);
--найти операции, не проводившиеся до среды
select Типы_операций.наименование 
from Типы_операций 
where Типы_операций.идентификатор not in(
select Трудовая_деятельность.операции_id 
from Трудовая_деятельность 
where Трудовая_деятельность.дата = 'Понедельник'
);
--названия и размер отчислений в местный бюджет для тех 
--учреждений, где проводили операции те, у кого налог 
--не менее 7%, но не более 16%. Включить в вывод фамилии 
--таких людей и отсортировать по размеру отчислений и 
--налогу
select Место_работы.учреждение, Место_работы.отчисление_percent,
Медперсонал.фамилия
from Трудовая_деятельность 
join Место_работы on Трудовая_деятельность.место_работы_id = Место_работы.идентификатор
join Медперсонал on Трудовая_деятельность.медперсонал_id = Медперсонал.идентификатор
where Трудовая_деятельность.медперсонал_id in(
select Медперсонал.идентификатор
from Медперсонал
where Медперсонал.налог_percent between 7 and 16
)
group by Место_работы.учреждение, Место_работы.отчисление_percent, 
Медперсонал.налог_percent, Медперсонал.фамилия
order by Место_работы.отчисление_percent, Медперсонал.налог_percent;
--даты, идентификаторы операций и фамилии тех, 
--кто проводил операции стоимостью не менее 
--7000р больше одного раза
select Трудовая_деятельность.дата, Типы_операций.идентификатор as операция_id,
Медперсонал.фамилия 
from Трудовая_деятельность
join Типы_операций on Трудовая_деятельность.операции_id = Типы_операций.идентификатор
join Медперсонал on Трудовая_деятельность.медперсонал_id = Медперсонал.идентификатор
where Трудовая_деятельность.операции_id in(
select Типы_операций.идентификатор
from Типы_операций
where Типы_операций.стоимость >= 7000
) and 
Трудовая_деятельность.количество > 1;

--задание 11
--больница, которая имеет наименьший процент отчислений
select Место_работы.учреждение
from Место_работы where отчисление_percent = any(
select min (отчисление_percent) from Место_работы
)
group by Место_работы.учреждение;
--медперсонал, проводивший операции с самой малой суммой оплаты
select Медперсонал.фамилия 
from Трудовая_деятельность
join Медперсонал on Трудовая_деятельность.медперсонал_id = Медперсонал.идентификатор
where оплата = any(
select min(оплата)
from Трудовая_деятельность
);
--цена самой дорогой операции, проведенной в четврег или пятницу
select Типы_операций.стоимость 
from Типы_операций
where Типы_операций.стоимость = any(
select max(Типы_операций.стоимость)
from Типы_операций 
join Трудовая_деятельность on  Трудовая_деятельность.операции_id = Типы_операций.идентификатор
where Трудовая_деятельность.дата in ('Четверг', 'Пятница')
);
--фамилии и места проживания медперсонала, проведших более одного
--наложения гипса в день
select Медперсонал.фамилия, Медперсонал.адрес
from Трудовая_деятельность 
join Медперсонал on Трудовая_деятельность.медперсонал_id = Медперсонал.идентификатор 
join Типы_операций on Трудовая_деятельность.операции_id = Типы_операций.идентификатор
where Типы_операций.наименование = 'Наложение гипса'
and Трудовая_деятельность.количество > any (
select Трудовая_деятельность.количество
from Трудовая_деятельность
where Трудовая_деятельность.количество = 1
);

--задание 12
--места проживания медперсонала и опороные пункты для операций
select адрес as место from Медперсонал
union select опорный_пункт as место from Типы_операций;

--задание 13
--медперсонал, неработающий в субботу
select Медперсонал.фамилия from Медперсонал 
where not exists(
select 1 from Трудовая_деятельность 
where Трудовая_деятельность.медперсонал_id = Медперсонал.идентификатор
and Трудовая_деятельность.дата = 'Суббота'
);
--операции, проводившиеся всеми врачами в Выксе
select Типы_операций.наименование from Типы_операций
where not exists (
select 1
from Медперсонал 
where Медперсонал.адрес = 'Выкса'
	and not exists (
		select 1
		from Трудовая_деятельность
		where Трудовая_деятельность.медперсонал_id = Медперсонал.идентификатор
		AND Трудовая_деятельность.операции_id = Типы_операций.идентификатор
		)
);
--места работы, где не дали УЗИ более раза
select Место_работы.учреждение from Место_работы
where exists(
select 1 
from Трудовая_деятельность
join Типы_операций on Трудовая_деятельность.операции_id = Типы_операций.идентификатор
where Трудовая_деятельность.место_работы_id = Место_работы.идентификатор
and Типы_операций.наименование = 'УЗИ'and Трудовая_деятельность.количество = 1
);
--места работы, где работали врачи из чужих населенных пунктов
select Место_работы.учреждение from Место_работы
where exists (
select 1
from Трудовая_деятельность
join Медперсонал on Трудовая_деятельность.медперсонал_id = Медперсонал.идентификатор
where Трудовая_деятельность.место_работы_id = Место_работы.идентификатор
and Медперсонал.адрес <> Место_работы.адрес
);

--задание 14
--найти число различных мест работы для медперсонала, 
--работавшего в Выксы
select count(distinct Трудовая_деятельность.место_работы_id) as число
from Трудовая_деятельность
join Место_работы on Трудовая_деятельность.место_работы_id = Место_работы.идентификатор
where Место_работы.адрес = 'Выкса';
--определить средний размер налога для медперсонала,
--производившего инъекции
select round(avg(Медперсонал.налог_percent),2) as средний_налог
from Трудовая_деятельность
join Медперсонал on Трудовая_деятельность.медперсонал_id = Медперсонал.идентификатор
join Типы_операций on Трудовая_деятельность.операции_id = Типы_операций.идентификатор
where Типы_операций.наименование like '%Инъекция%';
--кто из медперсонала делал операцию с мин стоимостью
select Медперсонал.фамилия from Трудовая_деятельность
join Медперсонал on Трудовая_деятельность.медперсонал_id = Медперсонал.идентификатор
join Типы_операций on Трудовая_деятельность.операции_id = Типы_операций.идентификатор
where Трудовая_деятельность.операции_id = (
select идентификатор
from Типы_операций
where стоимость = (
	select min(стоимость)
	from Типы_операций
)
);
--определить кол-во операций стоимостью не более 15000, 
--проведеенных в понедельник Губановым
select sum(Трудовая_деятельность.количество)
from Трудовая_деятельность 
join Типы_операций on Трудовая_деятельность.операции_id = Типы_операций.идентификатор
join Медперсонал on Трудовая_деятельность.медперсонал_id = Медперсонал.идентификатор
where Медперсонал.фамилия = 'Губанов'
and Трудовая_деятельность.дата = 'Понедельник' and
Типы_операций.стоимость <= 15000;

--задание 15
--определить для каждого дня недели и каждой операции
--сколько раз ее проводили 
select Трудовая_деятельность.дата, Типы_операций.наименование,
sum(Трудовая_деятельность.количество) 
from Трудовая_деятельность
join Типы_операций on Трудовая_деятельность.операции_id = Типы_операций.идентификатор
group by Трудовая_деятельность.дата, Типы_операций.наименование
order by Трудовая_деятельность.дата, Типы_операций.наименование;
--найти для каждого медработника среднюю стоимость всех
--проведенных им операций
select Медперсонал.фамилия, round(avg(Типы_операций.стоимость),2) as средняя_стоимость
from Трудовая_деятельность
join Типы_операций on Трудовая_деятельность.операции_id = Типы_операций.идентификатор
join Медперсонал on Трудовая_деятельность.медперсонал_id = Медперсонал.идентификатор
group by Медперсонал.фамилия;
--определить те мед.учреждения, где суммарная величина стоимости
--всех проведенных в них операций была более 30000
select Место_работы.учреждение, 
sum(Трудовая_деятельность.оплата) as общая_стоимость
from Трудовая_деятельность 
join Место_работы on Трудовая_деятельность.место_работы_id = Место_работы.идентификатор
group by Место_работы.учреждение 
having sum(Трудовая_деятельность.оплата) > 30000;
--для каждого дня недели найти число проведенных
--в этот день операций 
select Трудовая_деятельность.дата, sum(Трудовая_деятельность.количество)
from Трудовая_деятельность
group by Трудовая_деятельность.дата;